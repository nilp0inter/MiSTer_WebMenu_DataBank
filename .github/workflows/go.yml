name: Build DB

on:
  push:
    branches: [ master ]
    paths:
      - '*.go'
      - 'build.sh'
      - 'go.*'
      - 'rdb/*.go'
      - '.github/workflows/go.yml'
  schedule:
    - cron:  '30 20 * * 4'
jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.14
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Build
      run: go build -v .

    - name: Clone libretro
      run: git clone --depth 1 https://github.com/libretro/libretro-database.git
    
    - name: Build DB
      run: |
        rm -Rf db
        ./build.sh
        xz databank.db

    - name: Delete latest release
      shell: bash
      run: |
        curl -fsSL https://github.com/github/hub/raw/master/script/get | bash -s 2.14.1
        bin/hub release --include-drafts | grep latest && bin/hub release delete latest || true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Publish DB
      id: create_stable_release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: "latest"
        release_name: "latest"
        draft: false
        prerelease: false

    - name: Upload Stable Release Artifact
      id: upload_stable_release_asset 
      if: steps.create_stable_release.outcome == 'success'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_stable_release.outputs.upload_url }}
        asset_path: ./databank.db.xz
        asset_name: databank.db.xz
        asset_content_type: application/x-xz

    - name: Commit and push
      run: |
        git config user.name 'Release Bot'
        git config user.email 'release-bot@databank'
        git add db
        git commit -m "$(date)" && (git push origin master || exit 1) || exit 0
